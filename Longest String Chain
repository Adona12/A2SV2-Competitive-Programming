class Solution {
    public int longestStrChain(String[] words) {    
        HashMap<String,Integer> map = new HashMap<>();
        Arrays.sort(words,new Comparator<>(){
            public int compare(String a, String b){
                if(a.length() < b.length())
                    return -1;
                else if(a.length() > b.length())
                    return 1;
                else
                    return a.compareTo(b);
            }
        });  
        // for(String word : words){
        //     System.out.print(word+" ");
        // }
        int result = 0;
        for(String word : words){
            int max = 0;
            for(int i = 0; i < word.length(); i++){
                String prev = word.substring(0,i) + word.substring(i + 1, word.length());
                max = Math.max(max, map.getOrDefault(prev,0));
            }
            map.put(word,max + 1);
            result = Math.max(result,max + 1) ;
        }
        return result;
    }
}
