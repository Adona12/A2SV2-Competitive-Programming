class DetectSquares {
    HashMap<ArrayList<Integer>,Integer> map;
    ArrayList<ArrayList<Integer>> list;
    public DetectSquares() {
        map = new HashMap<>();
        list = new ArrayList<>();
    }
    
    public void add(int[] point) {
        ArrayList<Integer> points = new ArrayList<>();
        points.add(point[0]);
        points.add(point[1]);
        map.put(points, map.getOrDefault(points,0) + 1);
        list.add(points);
     //   System.out.println(list);
    }
    
    public int count(int[] point) {
        ArrayList<Integer> corner1 = new ArrayList<>();
        corner1.add(point[0]);
        corner1.add(point[1]);

        int count = 0;
        for(int i = 0; i < list.size();i++){
            int x= list.get(i).get(0);
            int y = list.get(i).get(1);

            if(x != point[0] || y != point[1]){
               
                if(Math.abs(x - point[0]) == Math.abs(y - point[1])){
                    ArrayList<Integer> corner2 = new ArrayList<>(Arrays.asList(x,y));
                    ArrayList<Integer> corner3 = new ArrayList<>(Arrays.asList(x, point[1]));
                    ArrayList<Integer> corner4 = new ArrayList<>(Arrays.asList(point[0],y));
                   
                    if(map.containsKey(corner3) && map.containsKey(corner4)){
                        count +=   map.get(corner3) * map.get(corner4);
                    }
                }
                
            }
        }
        return count;
    }
}

/**
 * Your DetectSquares object will be instantiated and called as such:
 * DetectSquares obj = new DetectSquares();
 * obj.add(point);
 * int param_2 = obj.count(point);
 */



